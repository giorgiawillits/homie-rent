<% current_house_members.each_with_index do |user, i| %> 
  <div class="ibox-content-table p-xxs">
    <div class="table-responsive">
      <table class="table shoping-cart-table">
        <tbody><tr class="split-row <%= (@charges and !@charges[user]) ? 'user-not-paying': 'user-paying' %>">
          <td class="col-md-1"><i class="m-t-s fa fa-check-square-o split-checkbox split-checkbox-font"></i></td>
          <td class="col-md-5 desc"><h3><div class="text-navy"><label for="user-<%= i %>"><%= user.full_name %></label></div></h3></td>
          <td class="col-md-3">
            <div class="input-group split-col-hidden hidden split-method-percent split-method-unit">
              <input class="form-control user-share" type="text"/>
              <span class="input-group-addon split-col-hidden hidden split-method-percent">%</span>
              <span class="input-group-addon split-col-hidden hidden split-method-unit">units</span>
            </div>
          </td>
          <td class="col-md-3">
            <div class="input-group">
              <span class="input-group-addon">$</span>
              <input class="form-control user-amount" type="text" name="charges[users][<%= user.id %>]"
                value="<%= (@charges[user] ? @charges[user].amount_formatted_plain : 0) if @charges %>">
            </div>
            
            <div class="input-group hidden">
              <input class="user-original-amount" type="text" 
                value="<%= (@charges and @charges[user]) ? @charges[user].amount_formatted_plain : 0 %>">
            </div>
            
          </td>
        </tr></tbody>
      </table>
    </div>
  </div>
<% end %>
<div class="ibox-content-table">
  <div class="col-md-3 col-md-offset-9">
    <button class="pull-right btn btn-sm btn-primary btn-block" type="submit">Save</button>
  </div>
</div>
  
  
  
<script>
  $(document).ready(function() {
    
    editMode = $("#split-method-dollars").hasClass("active");
    
    var calculateCharges = function() {
      var splitMethod = $(".split-method-active").attr("id");
      if (splitMethod == "split-method-equal") {
        calculateEqualCharges();
      } else if (splitMethod == "split-method-dollars") {
        displayDollarCharges();
      } else {
        calculatePercentOrUnitCharges(splitMethod);
      }
    }
    
    var calculateChargesEditMode = function() {
      var splitMethod = $(".split-method-active").attr("id");
      if (splitMethod == "split-method-equal") {
        calculateEqualCharges();
      } else if (splitMethod == "split-method-dollars") {
        displayDollarCharges();
      } else {
        $(".user-paying").each(function() {
          $(this).find(".user-share").val($(this).find(".user-amount").val() / $("#amount").val() * 100);
        });
      }
    }
    
    var calculateEqualCharges = function() {
      var numUsers = $(".user-paying").length;
      var equalAmount = $("#amount").val() / numUsers;
      $(".user-paying").find(".user-amount").val(equalAmount);
      $(".user-not-paying").find(".user-amount").val(0);
    };
    
    var calculatePercentOrUnitCharges = function(splitMethod) {
      // Calculate unit price
      if (splitMethod == "split-method-percent") {
        var totalUnits = 100;
      } else {
        var totalUnits = 0;
        $(".user-paying").find(".user-share").each(function() {
          totalUnits += Number($(this).val());
        });
      }
      var unitPrice = 0;
      if (totalUnits != 0) {
        unitPrice = $("#amount").val() / totalUnits;
      }
      
      // unchecked: fill shares with 0, fill amount with 0
      $(".user-not-paying").find(".user-share").val(0);
      $(".user-not-paying").find(".user-amount").val(0);
      
      // checked: fill shares with "" if 0, fill amount
      $(".user-paying").each(function() {
        var unitsInput = $(this).find(".user-share");
        if (unitsInput.val() == 0) {
          unitsInput.val("");
        }
        $(this).find(".user-amount").val(unitPrice * unitsInput.val());
      });
      calculateAmountRemaining(100, ".user-share");
    }
    
    var displayDollarCharges = function() {
      $(".user-not-paying").find(".user-amount").val(0);
      $(".user-paying").find(".user-amount").each(function() {
        if ($(this).val() == 0) {
          $(this).val("")
        }
      });
      calculateAmountRemaining($("#amount").val(), ".user-amount");
    }
    
    var calculateAmountRemaining = function(total, inputClass) {
      var totalAssigned = 0;
      $(".user-paying").find(inputClass).each(function() {
        totalAssigned += Number($(this).val());
      });
      var amountRemaining = total - totalAssigned;
    }
    
    // Re-calculate amount remaining when user-amount changes (split-method-dollars)
    $(".user-amount").change(function() {
      calculateAmountRemaining($("#amount").val(), ".user-amount")
    });
    
    // Update charge table when user is selected or unselected
    $(".split-checkbox").click(function() {
      $(this).toggleClass("fa-check-square-o fa-square-o");
      $(this).parents(".split-row").toggleClass("user-paying user-not-paying");
      calculateCharges();
    });
    
    // Re-calculate charges when total amount changes
    $("#amount").change(calculateCharges);
    
    // Re-calculate charges when percent/unit amount changes
    $(".user-share").change(calculateCharges);
    
    // Change split method
    $(".split-method").click(function() {
      // hide any percent or unit specific elements
      $(".split-col-showing").toggleClass("hidden");
      $(".split-col-showing").toggleClass("split-col-showing split-col-hidden");
      
      var splitMethod = $(this).attr("id");
      
      // show percent/unit specific elements if percent/unit method chosen
      $("." + splitMethod).toggleClass("hidden");
      $("." + splitMethod).toggleClass("split-col-showing split-col-hidden");
      
      // set or unset readonly on dollar amount input
      if ((splitMethod == "split-method-equal" || splitMethod == "split-method-dollars") && $(".user-amount").attr("readonly")) {
        $(".user-amount").attr("readonly", false);
      } else if ((splitMethod == "split-method-percent" || splitMethod == "split-method-unit") && !$(".user-amount").attr("readonly")) {
        $(".user-amount").attr("readonly", true);
      }
      
      // switch active split method and recalculate charges
      $(".split-method-active").toggleClass("split-method-active split-method-inactive");
      $(this).toggleClass("split-method-active split-method-inactive");
      
      if (!editMode) {
        $(".user-amount").val("");
        $(".user-share").val("");
        calculateCharges();
      } else {
        calculateChargesEditMode();
      }
      
    });
    
  });
</script>
